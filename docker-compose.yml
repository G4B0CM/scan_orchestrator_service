services:
  postgres_auth:
    image: postgres:15-alpine
    container_name: postgres_auth_db
    ports:
      - "5433:5432" # Exponemos en el puerto 5433 para no chocar
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=GaBR1302cm#$ # Tu contraseña del .env
      - POSTGRES_DB=auth_service_db
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

  postgres_db:
    image: postgres:15-alpine
    container_name: postgres_db_scan
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=GaBR1302cm#$ # Tu contraseña del .env
      - POSTGRES_DB=scan_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scan_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
  postgres_auth_data:
